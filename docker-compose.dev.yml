services:
  # --- Database Service ---
  db:
    ports:
      - "5432:5432"
    networks:
      - fast_miveh_network

  # --- Backend Services ---
  backend:
    command: gunicorn -c /home/appuser/app/core/gunicorn.py core.wsgi:application
    volumes:
      - ./backend:/home/appuser/app
      - django_logs:/var/log/django
    ports:
      - "8000:8000"
    networks:
      - fast_miveh_network

  celery-worker:
    command: celery -A core worker -l info
    volumes:
      - ./backend:/home/appuser/app
    networks:
      - fast_miveh_network

  celery-beat:
    command: celery -A core beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./backend:/home/appuser/app
    networks:
      - fast_miveh_network

  flower:
    command: >
      celery -A core flower
      --address=0.0.0.0
      --port=5555
      --basic_auth=${FLOWER_BASIC_AUTH}
    ports:
      - "${FLOWER_PORT}:5555"
    volumes:
      - ./backend:/home/appuser/app
    networks:
      - fast_miveh_network

  # --- Frontend Service ---
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development # Build the development stage
    command: npm run dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      - fast_miveh_network
    user: "root"

  # --- Web Server ---
  nginx:
    ports:
      - "80:80"
    volumes:
      - ./nginx/development.conf:/etc/nginx/conf.d/default.conf
      - nginx_logs:/var/log/nginx
    networks:
      - fast_miveh_network

  # --- Utility Services ---
  pgadmin:
    ports:
      - "5050:80"
    networks:
      - fast_miveh_network

# --- These commands are for initial setup and should be run once after the containers are up. ---
# docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d
# docker-compose -f docker-compose.yml -f docker-compose.dev.yml exec backend python manage.py migrate
# docker-compose -f docker-compose.yml -f docker-compose.dev.yml exec backend python manage.py createsuperuser
